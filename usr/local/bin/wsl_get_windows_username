#!/bin/bash
#
# LOCAL_BIN="/usr/local/bin/wsl_get_windows_username" && echo "" > "${LOCAL_BIN}" && vi "${LOCAL_BIN}" && chmod 0755 "${LOCAL_BIN}";
#

if [ -z "$(uname -r | grep 'Microsoft')" ]; then
	# Non-WSL (Non Windows-based OS)
	exit 1;
	
else

	DIR_WIN32_USERS=$(find /mnt/*/Users -mindepth 0 -maxdepth 0 -type d);

	if [ -n "${DIR_WIN32_USERS}" ] && [ -d "${DIR_WIN32_USERS}" ] && [ $(echo "$(ls ${DIR_WIN32_USERS} | wc -l) > 0" | bc) -eq 1 ]; then
		# Assumed to be a Windows based OS

		PotentialUsersFile="/tmp/potential_wsl_hosts_$(date +'%s%N')";
		if [ -f "${PotentialUsersFile}" ]; then
			rm -f "${PotentialUsersFile}";
		fi;

		InvalidUsersFile="/tmp/invalid_wsl_hosts_$(date +'%s%N')";
		if [ -f "${InvalidUsersFile}" ]; then
			rm -f "${InvalidUsersFile}";
		fi;
		
		# Make sure required runtime(s) are installed
		if [ -z "$(which bc)" ]; then
			apt-get-update -y; apt-get install -y bc;
		fi;


		find "${DIR_WIN32_USERS}" \
		-mindepth 1 \
		-maxdepth 1 \
		-name '*' \
		-type 'd' \
		-not -path "${DIR_WIN32_USERS}/Default" \
		-not -path "${DIR_WIN32_USERS}/Public" \
		-print0 \
		| while IFS= read -r -d $'\0' EachUserDir; do
			LastExitCode=$([[ -r "${EachUserDir}/Documents" ]]; echo $?);
			if [ "${LastExitCode}" == "0" ]; then
				if [ "${1}" == "verbose" ]; then echo "✓ PASS ✓ Can read \"${EachUserDir}\" - Current session has sufficient privilege(s)"; fi;
				echo $(basename "${EachUserDir}") >> "${PotentialUsersFile}";
			else
				if [ "${1}" == "verbose" ]; then echo "× FAIL × Cannot read \"${EachUserDir}\" - Current session lacks sufficient privilege(s)"; fi;
				echo $(basename "${EachUserDir}") >> "${InvalidUsersFile}";
			fi;
		done;
		
		if [ -f "${PotentialUsersFile}" ]; then
			CountMatchedUsers="$(cat ${PotentialUsersFile} | wc -l)";
		else
			CountMatchedUsers="0";
		fi;
		
		if [ $(echo "${CountMatchedUsers} == 1" | bc) -eq 1 ]; then # Matched exactly 1 user
			if [ "${1}" == "verbose" ]; then
				echo "";
				echo "Found [ ${CountMatchedUsers} ] potential WSL hosts-user(s):";
			fi;
			cat "${PotentialUsersFile}";
			exit 0;
		elif [ $(echo "${CountMatchedUsers} > 1" | bc) -eq 1 ]; then # Matched more than 1 user

			if [ "${1}" == "verbose" ]; then
				echo "";
				echo -n "Found [ ${CountMatchedUsers} ] potential WSL hosts-user(s): ";
			fi;
				cat "${PotentialUsersFile}" | while read -r EachMatchedUser; do
					if [ "${1}" == "verbose" ]; then
						echo -n "${EachMatchedUser} ";
					fi;
					DIR_WSL_UBUNTU_ROOTFS=$(find "/mnt/"*"/Users/${EachMatchedUser}/AppData/Local/Packages/"*"Ubuntu"*"/LocalState/rootfs" -mindepth 0 -maxdepth 0 -type d);
					if [ -n "${DIR_WSL_UBUNTU_ROOTFS}" ] && [ -d "${DIR_WSL_UBUNTU_ROOTFS}" ]; then
						if [ "${1}" == "verbose" ]; then
							echo "Host User \"${EachMatchedUser}\" has the Ubuntu WSL directory in their Home-Directory: ";
							echo " |--> \"${DIR_WSL_UBUNTU_ROOTFS}\"";
						fi;
						if [ -z "${First_Host_User_with_WSL_Enabled}" ]; then
							First_Host_User_with_WSL_Enabled="${EachMatchedUser}"; # output the first-found
						fi;
					fi;
				done;
			if [ "${1}" == "verbose" ]; then
				echo "";
			fi;
			read -r FirstPotentialUser < "${PotentialUsersFile}";
			echo "${FirstPotentialUser}";
			exit 0;

		else
			echo "";
			echo "Error - No directories found matching [ ${DIR_WIN32_USERS}/*/Documents ]";
			exit 1;

		fi;
		if [ "${1}" == "verbose" ]; then
			echo "";
		fi;

	else
		# Assumed to be a NON-Windows based OS
		echo "Info - Directory not-found/empty: \"${DIR_WIN32_USERS}\"";
		echo "Info - Assuming that this is a Non-Windows based OS";
		exit 1;

	fi;

fi;



# ------------------------------------------------------------
#
# Citation(s)
#	
#		stackoverflow.com  |  "How do I use a for-each loop to iterate over file paths in bash?"  |  https://stackoverflow.com/a/15066129
#
# ------------------------------------------------------------
