#!/bin/bash
#
PotentialUsersFile="/tmp/potential_wsl_hosts_$(date +'%s%N')"; if [ -f "${PotentialUsersFile}" ]; then rm -f "${PotentialUsersFile}"; fi;
#
InvalidUsersFile="/tmp/invalid_wsl_hosts_$(date +'%s%N')"; if [ -f "${InvalidUsersFile}" ]; then rm -f "${InvalidUsersFile}"; fi;
#
find "/mnt/c/Users" \
-mindepth 1 \
-maxdepth 1 \
-name '*' \
-type 'd' \
-not -path "/mnt/c/Users/Default" \
-not -path "/mnt/c/Users/Public" \
-print0 \
| while IFS= read -r -d $'\0' EachUserDir; do
	LastExitCode=$([[ -r "${EachUserDir}/Documents" ]]; echo $?);
	if [ "${LastExitCode}" == "0" ]; then
		if [ "${1}" == "verbose" ]; then echo "PASS - Can read \"${EachUserDir}\" - Current session has sufficient privilege(s)"; fi;
		echo "$(basename ${EachUserDir})" >> "${PotentialUsersFile}";
	else
		if [ "${1}" == "verbose" ]; then echo "FAIL - Cannot read \"${EachUserDir}\" - Current session lacks sufficient privilege(s)"; fi;
		echo "$(basename ${EachUserDir})" >> "${InvalidUsersFile}";
	fi;
done;
#
if [ -f "${PotentialUsersFile}" ] then
	CountMatchedUsers="$(cat ${PotentialUsersFile} | wc -l)";
else
	CountMatchedUsers="0";
fi;
#
if [ $(echo "${CountMatchedUsers} == 1" | bc) -eq 1 ]; then # Matched exactly 1 user - output the user
	if [ "${1}" == "verbose" ]; then
		echo -e "\nFound [ ${CountMatchedUsers} ] potential WSL hosts-user(s):";
	fi;
	cat "${PotentialUsersFile}";
	exit 0;
elif [ $(echo "${CountMatchedUsers} > 1" | bc) -eq 1 ]; then # Matched more than 1 user - output the first-found
	if [ "${1}" == "verbose" ]; then
		echo -e "\nFound [ ${CountMatchedUsers} ] potential WSL hosts-user(s):";
		cat "${PotentialUsersFile}" | while read EachMatchedUser; do
			echo "${EachMatchedUser}";
		done;
	fi;
	read -r FirstPotentialUser < "${PotentialUsersFile}";
	echo "${FirstPotentialUser}";
	exit 0;
else
	echo "Error - No User-Documents found to be readable";
	exit 1;
fi;
#
if [ "${1}" == "verbose" ]; then
	echo -e "\n";
fi;
#
# Citation(s)
#	
#		Thanks to StackOverflow user [ dogbane ] on forum [ https://stackoverflow.com/questions/15065010/how-do-i-use-a-for-each-loop-to-iterate-over-file-paths-in-bash ]
#