#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/set_hostname" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else
	# ------------------------------------------------------------
	#
	# This script modifies a Linux instance's host & domain name(s)
	#
	#	Instantiate this command-line utility:
	#	>		vi "/usr/local/sbin/set_hostname"; chmod 0755 "/usr/local/sbin/set_hostname";
	#
	### Run using "DRY-RUN" mode:
	#	>		set_hostname "localhost.localdomain" "1";
	#
	### Run using "LIVE" mode:
	#	>		set_hostname "localhost.localdomain" "0";
	#

	if [ -n "${1}" ] && [ -z "${SET_HOSTNAME}" ]; then
		SET_HOSTNAME="${1}";
	fi;

	if [ -z "${SET_HOSTNAME}" ]; then

		# Required variable empty: SET_HOSTNAME
		echo "$(date +'%Y-%m-%d %H:%M:%S') | Error - No value defined for \${SET_HOSTNAME} (first in-line argument)";
		echo "                      Please define the new hostname (or hostname.domainname) by performing one of the following:";
		echo "                       |";
		echo "                       |--> option 1:  >   set_hostname \"localhost.localdomain\";";
		echo "                       |";
		echo "                       |--> option A:  >   env SET_HOSTNAME=\"localhost.localdomain\" set_hostname;";
		echo "";
		exit 1;

	else

		SET_FQDN="${SET_HOSTNAME}";

		SUBSTRING_ONLY_PERIODS="${SET_FQDN//[^.]}";
		FQDN_COUNT_PERIODS="${#SUBSTRING_ONLY_PERIODS}";
		if [ "${FQDN_COUNT_PERIODS}" == "0" ]; then
			SET_HOSTNAME="${SET_FQDN}";
			SET_DOMAIN="localdomain";
		else
			SET_HOSTNAME=$(echo "${SET_FQDN}" | cut --delimiter="." --fields=1 --only-delimited);
			SET_DOMAIN=$(echo "${SET_FQDN}" | cut --delimiter="." --fields=1 --complement --only-delimited);
		fi;
		SET_FQDN="${SET_HOSTNAME}.${SET_DOMAIN}";
		
		echo "";
		echo "Set Hostname: \"${SET_HOSTNAME}\"";
		echo "Set Domain: \"${SET_DOMAIN}\"";
		echo " |";
		echo " |--> FQDN will be: \"${SET_FQDN}\"";
		echo "";

		# ------------------------------------------------------------
		# Determine Dry-Run mode
		#

		if [ -n "${DRY_RUN}" ]; then
			if [ "${DRY_RUN}" != "1" ] && [ "${DRY_RUN}" != "0" ]; then
				echo "";
				echo "$(date +'%Y-%m-%d %H:%M:%S') | Error - Invalid value given for \$DRY_RUN (\$2==\"${2}\")";
				echo "Please set to \"1\" for dry-run mode, \"0\" for live-run mode";
				echo "  ( e.g. set_hostname \"localhost.localdomain\" \"1\"; )";
				echo "";
				echo "Resetting \$DRY_RUN to \"1\"";
				DRY_RUN=1;
			fi;
		elif [ -n "${2}" ]; then
			if [ "${2}" != "1" ] && [ "${2}" != "0" ]; then
				echo "";
				echo "$(date +'%Y-%m-%d %H:%M:%S') | Warning - Invalid value given for \$DRY_RUN (\$2==\"${2}\")";
				echo "Please set to \"1\" for dry-run mode, \"0\" for live-run mode";
				echo "  ( e.g. set_hostname \"localhost.localdomain\" \"1\"; )";
				echo "";
				echo "Resetting \$DRY_RUN to \"1\"";
				echo "";
				DRY_RUN=1;
			else
				DRY_RUN=${2};
			fi;
		else
			echo "";
			echo "$(date +'%Y-%m-%d %H:%M:%S') | Warning - No value given for \$DRY_RUN (\$2)";
			echo "Please set to \"1\" for dry-run mode, \"0\" for live-run mode";
			echo "  ( e.g. set_hostname \"localhost.localdomain\" \"0\"; )";
			echo "";
			echo "";
			echo "Resetting \$DRY_RUN to \"1\"";
			echo "";
			DRY_RUN=1;
		fi;

		# ------------------------------------------------------------
		# Determine Linux distro
		#

		IS_CENTOS=$(if [[ $(cat /etc/*release | grep -i centos | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi; );
		IS_UBUNTU=$(if [[ $(cat /etc/*release | grep -i ubuntu | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi; );
		IS_ALPINE=$(if [[ $(cat /etc/*release | grep -i alpine | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi; );
		IS_DEBIAN=$(if [[ $(cat /etc/*release | grep -i debian | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi; );
		THIS_LINUX_DISTRO="$(if [[ ${IS_CENTOS} -gt 0 ]]; then echo CENTOS; elif [[ ${IS_UBUNTU} -gt 0 ]]; then echo UBUNTU; elif [[ ${IS_ALPINE} -gt 0 ]]; then echo ALPINE; elif [[ ${IS_DEBIAN} -gt 0 ]]; then echo DEBIAN; else echo UNKNOWN; fi; )";

		# ------------------------------------------------------------
		# 
		#

		AZURE_LAN_IPV4="$(hostname -i | awk '{print $1}')";
		

		# ------------------------------------------------------------
		# External server(s) to resolve WAN-IP through
		#
		RESOLVER_1="https://icanhazip.com";
		RESOLVER_2="https://ipecho.net/plain";
		RESOLVER_3="https://ident.me";
		RESOLVER_4="https://bot.whatismyipaddress.com";

		### Get WAN IPv4
		if [ -z "${THIS_WAN_IPV4}" ]; then THIS_WAN_IPV4=$(curl -4 -L -s "${RESOLVER_1}"); fi; RESOLVER_USED="${RESOLVER_1}";
		if [ -z "${THIS_WAN_IPV4}" ]; then THIS_WAN_IPV4=$(curl -4 -L -s "${RESOLVER_2}"); fi; RESOLVER_USED="${RESOLVER_2}";
		if [ -z "${THIS_WAN_IPV4}" ]; then THIS_WAN_IPV4=$(curl -4 -L -s "${RESOLVER_3}"); fi; RESOLVER_USED="${RESOLVER_3}";
		if [ -z "${THIS_WAN_IPV4}" ]; then THIS_WAN_IPV4=$(curl -4 -L -s "${RESOLVER_4}"); fi; RESOLVER_USED="${RESOLVER_4}";

		### Get LAN Gateway IPv4
		GATEWAY_LAN_IPV4=$(ip route|grep 'default via '|sed --quiet --regexp-extended --expression="s/^default\s+via\s+([0-9a-fA-F\:\.]+)\s+[a-zA-Z0-9]+\s+([a-zA-Z0-9]+).+$/\1/p");

		### Get LAN NIC (by-name)
		THIS_LAN_NIC=$(ip route|grep 'default via '|sed --quiet --regexp-extended --expression="s/^default\s+via\s+([0-9a-fA-F\:\.]+)\s+[a-zA-Z0-9]+\s+([a-zA-Z0-9]+).+$/\2/p");

		### Get LAN IPv4 / IPv6
		THIS_LAN_IPV4=$(ip addr show ${THIS_LAN_NIC} | grep 'inet' | grep 'scope global' | awk '{ print $2; }' | sed 's/\/.*$//' | grep '\.');
		THIS_LAN_IPV6=$(ip addr show ${THIS_LAN_NIC} | grep 'inet' | grep 'scope global' | awk '{ print $2; }' | sed 's/\/.*$//' | grep '\:');

		echo "";

		### Show Resolved WAN IPv4
		if [ -n "${THIS_WAN_IPV4}" ]; then
			echo "Resolved IPv4 Address (WAN) to: \"${THIS_WAN_IPV4}\"";
		else 
			echo "$(date +'%Y-%m-%d %H:%M:%S') | Error - Unable to resolve IPv4 Address (WAN).";
			echo "If you wish to manually set it, please set \${THIS_WAN_IPV4} to your desired value and re-run this script.";
			exit 1;
		fi;

		### Show Resolved Gateway IPv4
		if [ -n "${GATEWAY_LAN_IPV4}" ]; then
			echo "Resolved IPv4 Default Gateway (LAN) to: \"${GATEWAY_LAN_IPV4}\"";
		else 
			echo "$(date +'%Y-%m-%d %H:%M:%S') | Warning - Unable to resolve IPv4 Default Gateway (LAN).";
		fi;

		### Show Resolved LAN IPv4
		if [ -n "${THIS_LAN_IPV4}" ]; then
			echo "Resolved IPv4 Address (LAN) to: \"${THIS_LAN_IPV4}\"";
		else 
			echo "$(date +'%Y-%m-%d %H:%M:%S') | Error - Unable to resolve IPv4 Address (LAN).";
			echo "If you wish to manually set it, please set \${THIS_LAN_IPV4} to your desired value and re-run this script.";
			exit 1;
		fi;

		### Show Resolved LAN IPv6
		if [ -n "${THIS_LAN_IPV6}" ]; then
			echo "Resolved IPv6 Address (LAN) to: \"${THIS_LAN_IPV6}\"";
		else 
			echo "Warning - Unable to resolve IPv6 Address (LAN).";
		fi;

		echo "";

		# ------------------------------------------------------------
		#	If Dry-Run mode is off, require user to confirm changes
		#

		echo "";
		if [[ "${DRY_RUN}" == "0" ]]; then
			echo "";
			echo "Dry-Run Mode:  OFF";
			echo "";
			read -p "  --> Press 'y' to confirm that the above value(s) match the intended values for this device's hostname & domain-name ( y / n )" -n 1 -r
			echo "";
			if [[ $REPLY =~ ^[Yy]$ ]]; then
				echo "Confirmed by user - Proceeding with changes to hostname & domain-name...";
			else
				echo "Cancelled by user - Exiting after 60s...";
				sleep 60;
				exit 1;
			fi;
		else
			echo "Dry-Run Mode:  ON";
		fi;
		echo "";

		# ------------------------------------------------------------
		# /etc/hostname
		#
		HOSTNAME_FILE="/etc/hostname";
		if [[ -f "${HOSTNAME_FILE}" ]]; then
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				echo "${SET_HOSTNAME}" > "${HOSTNAME_FILE}";
			# else # dry-run
			# 	echo "";
			# 	echo "APPLY HOSTNAME VIA [ ${HOSTNAME_FILE} ]";
			fi;
		fi;

		# ------------------------------------------------------------
		# /etc/hosts
		#
		HOSTS_FILE="/etc/hosts";
		if [[ -f "${HOSTS_FILE}" ]]; then
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				echo "";
				echo "HOSTS FILE (BEFORE-EDITS)" && cat "${HOSTS_FILE}";
				TEMP_HOSTS="${HOSTS_FILE}_TEMP";
				cp -f "${HOSTS_FILE}" "${TEMP_HOSTS}";
				#
				sed_1="/^${THIS_WAN_IPV4}/c\ ";
				sed_2="/^${THIS_LAN_IPV4}/c\ ";
				sed --in-place --expression="${sed_1}" --expression="${sed_2}" "${TEMP_HOSTS}";
				#
				sed_3_LOCALHOST="127.0.0.1 localhost localhost.localdomain";
				sed_3_LAN="${THIS_LAN_IPV4} ${SET_HOSTNAME} ${SET_HOSTNAME}.${SET_DOMAIN}";
				sed_3_WAN="${THIS_WAN_IPV4} ${SET_HOSTNAME} ${SET_HOSTNAME}.${SET_DOMAIN}";
				sed --in-place --expression="/^127.0.0.1/ {
					a\ ${sed_3_LAN}
					a\ ${sed_3_WAN}
					c\ ${sed_3_LOCALHOST}
				}" "${TEMP_HOSTS}";
				#
				sed_4_remove_whitespace_lines='/^\s*$/d';
				sed --in-place --expression="${sed_4_remove_whitespace_lines}" "${TEMP_HOSTS}";
				#
				sed_5_remove_starting_whitespace='s/^\s*//g';
				sed --in-place --expression="${sed_5_remove_starting_whitespace}" "${TEMP_HOSTS}";
				#
				cp -f "${TEMP_HOSTS}" "${HOSTS_FILE}" && rm -f "${TEMP_HOSTS}";
				echo "";
				echo "HOSTS FILE (AFTER-EDITS)" && cat "${HOSTS_FILE}";
			# else # dry-run
			# 	echo "";
			# 	echo "APPLY HOSTNAME VIA [ ${HOSTS_FILE} ]";
			fi;
		fi;

		# ------------------------------------------------------------
		# centos 6
		#
		if [[ -f "/etc/sysconfig/network" ]]; then
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				sed --in-place --expression="/^HOSTNAME=/c\HOSTNAME=${SET_HOSTNAME}.${SET_DOMAIN}" "/etc/sysconfig/network";
			# else # dry-run
			# 	echo "";
			# 	echo "APPLY HOSTNAME VIA [ /etc/sysconfig/network ]";
			fi;
		fi;

		# ------------------------------------------------------------
		# debian 7 / slackware / ubuntu 14.04
		#
		if [[ -f "/etc/init.d/hostname.sh" ]]; then
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				/etc/init.d/hostname.sh;
			else # dry-run
				echo "";
				echo "APPLY HOSTNAME VIA [ /etc/init.d/hostname.sh ]";
			fi;
		fi;

		# ------------------------------------------------------------
		# arch / centos 7 / debian 8 / fedora / ubuntu 16.04 and above
		#
		if [[ $(hostnamectl | wc -l) -gt 0 ]]; then
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				hostnamectl set-hostname "${SET_HOSTNAME}";
			# else # dry-run
			# 	echo "";
			# 	echo "APPLY HOSTNAME VIA [ hostnamectl ]";
			fi;
		fi;


		# ------------------------------------------------------------
		# Apply Changes
		#
		if [[ -f "/etc/init.d/network" ]]; then # centos distros
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				echo "REBOOT REQUIRED FOR [ /etc/init.d/network ]";
				read -p "REBOOT NOW? ( Y/N )" -n 1 -r
				echo "";
				if [[ $REPLY =~ ^[Yy]$ ]]; then
					echo "";
					echo "RESTARTING [ /etc/init.d/network ]";
					/etc/init.d/network restart;
				else
					echo "";
					echo "POST-PONING RESTART OF [ /etc/init.d/network ]";
					exit 1;
				fi;
			# else # dry-run
			# 	echo "";
			# 	echo "APPLY CHANGES VIA [ /etc/init.d/network restart ]";
			fi;
		else # [other] distros
			if [[ "${DRY_RUN}" == "0" ]]; then # NOT a dry-run
				read -p "REBOOT REQUIRED - PERFORM NOW? ( Y/N )" -n 1 -r
				echo "";
				if [[ $REPLY =~ ^[Yy]$ ]]; then
					echo "";
					echo "REBOOTING...";
					shutdown -r now;
				else
					echo "";
					echo "POST-PONING REBOOT";
					exit 1;
				fi;
			# else # dry-run
			# 	echo "";
			# 	echo "APPLY CHANGES VIA [ shutdown -r now ]";
			fi;
		fi;
		echo "";

	fi;

fi;

sleep 1;

# ------------------------------------------------------------
#
#	Citation(s)
#
#		https://jblevins.org/log/hostname
#
#		https://support.rackspace.com/how-to/centos-hostname-change/
#
#		https://www.linode.com/docs/getting-started/#setting-the-hostname
#
#		stackoverflow.com  |  "Count occurrences of a char in a string using Bash"  |  https://stackoverflow.com/a/16679640
#
# ------------------------------------------------------------