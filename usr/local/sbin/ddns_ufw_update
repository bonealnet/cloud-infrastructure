#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/ddns_ufw_update" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/log/${0}"; if [ -w "/var/log/" ] && LOGDIR="/var/log/${0}"; mkdir -p "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')" && echo "" > "${LOGFILE}" && chmod 600 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then

	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;

else

	# "Verbose-ness", e.g. Log Output-Level
	if [ -n "${VERBOSITY}" ] && (("${VERBOSITY}" >= "1")); then
		VERBOSE="1";
	else
		VERBOSE="0";
	fi;

	# Files to pull data in-from
	HOSTS_WHITELIST="/etc/ddns_ufw_update.whitelist";
	OLD_ALLOWEDS="/etc/ddns_ufw_update.resolved";

	add_rule() {
		local proto=$1;
		local port=$2;
		local ip=$3;
		local regex="${port}\/${proto}.*ALLOW.*IN.*${ip}";
		local rule=$(ufw status numbered | grep $regex);
		if [ -z "$rule" ]; then
			echo "$(date +'%Y-%m-%d %H:%M:%S') | ✓ Creating Rule: ${proto}/${port} ALLOW IN ${ip}";
			ufw allow proto ${proto} from ${ip} to any port ${port};
		else
			if [ "$VERBOSE" == "1" ]; then echo "$(date +'%Y-%m-%d %H:%M:%S') | … No action - Rule already exists: ${proto}/${port} ALLOW IN ${ip}"; fi;
		fi;
	}

	delete_rule() {
		local proto=$1;
		local port=$2;
		local ip=$3;
		local regex="${port}\/${proto}.*ALLOW.*IN.*${ip}";
		local rule=$(ufw status numbered | grep $regex);
		if [ -n "$rule" ]; then
			echo "$(date +'%Y-%m-%d %H:%M:%S') | ✘ Deleting Rule: ${proto}/${port} ALLOW IN ${ip}";
			ufw delete allow proto ${proto} from ${ip} to any port ${port};
		else
			if [ "$VERBOSE" == "1" ]; then echo "$(date +'%Y-%m-%d %H:%M:%S') | … No action - Rule already deleted: ${proto}/${port} ALLOW IN ${ip}"; fi;
		fi;
	}

	sed '/^[[:space:]]*$/d' ${HOSTS_WHITELIST} | sed '/^[[:space:]]*#/d' | while read line;	do
		proto=$(echo ${line} | cut -d: -f1);
		port=$(echo ${line} | cut -d: -f2);
		host=$(echo ${line} | cut -d: -f3);
		
		if [ -f ${OLD_ALLOWEDS} ]; then
			old_ip=$(cat ${OLD_ALLOWEDS} | grep ${host} | cut -d: -f2);
		fi;

		ip=$(dig +short $host | tail -n 1);

		if [ -z ${ip} ]; then
			if [ -n "${old_ip}" ]; then
				delete_rule $proto $port $old_ip;
			fi;
			echo "$(date +'%Y-%m-%d %H:%M:%S') | Failed to resolve the ip address of ${host}." 1>&2;
			exit 1;
		fi;

		if [ -n "${old_ip}" ]; then
			if [ ${ip} != ${old_ip} ]; then
				delete_rule $proto $port $old_ip;
			fi;
		fi;

		add_rule $proto $port $ip;

		if [ -f ${OLD_ALLOWEDS} ]; then
			sed -i.bak /^${host}*/d ${OLD_ALLOWEDS};
		fi;

		echo "${host}:${ip}" >> ${OLD_ALLOWEDS};
		
	done;

	# Set ownership & privileges for the logging directory & sub-contents
	chown -R "syslog:adm" "${LOGDIR}";
	find "${LOGDIR}" -type d -print0 | xargs -0 chmod 0750; # directories 
	find "${LOGDIR}" -type f -print0 | xargs -0 chmod 0640; # files

fi;

#
# ------------------------------------------------------------
#
#### Setting up this file can be done via:
#
#		vi "/usr/local/sbin/ddns_ufw_update";
#
#		chmod 0755 "/usr/local/sbin/ddns_ufw_update";
#
#
#
#### The content of "/etc/ddns_ufw_update.whitelist" should match the format:
#	
#		vi "/etc/ddns_ufw_update.whitelist";
#
#		tcp:22:yourpc.no-ip.org
#
#
#
#### Shortcuts to this script, whitelist, and logfile-directory can be set via:
#	
#		mkdir -p "/root/ddns_ufw_update";
#		chmod 0700 "/root/ddns_ufw_update";
#		ln -sf "/etc/ddns_ufw_update.whitelist" "/root/ddns_ufw_update/whitelist";
#		ln -sf "/usr/local/sbin/ddns_ufw_update" "/root/ddns_ufw_update/runtime";
#		ln -sf "/var/log/ddns_ufw_update" "/root/ddns_ufw_update/logs";
#
#
#
#### A crontab entry for executing the script every 3 minutes could look like this:
#
#		crontab -e
#
#		*/3 * * * * sudo "ddns_ufw_update"
#
#
#
# ------------------------------------------------------------
#
# Citation(s)
#
#		Thanks to stackoverflow user "Force" on forum: https://superuser.com/questions/646958/ufw-rules-for-specific-host-dynamic-dns
#		Original script from https://notepad2.blogspot.com/2012/06/shell-script-update-ufw-rules-for-hosts.html
#
# ------------------------------------------------------------