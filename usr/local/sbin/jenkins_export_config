#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/jenkins_export_config" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else

	# ------------------------------------------------------------

	START_TIMESTAMP="$(date +'%Y-%m-%d_%H-%M-%S')";

	TARGET_USER="jenkins";

	FILEPATH_ARCHIVE_7Z="${HOME}/${TARGET_USER}_config-export.${START_TIMESTAMP}.7z";

	# Determine user's home-directory location
	if [ -z "${JENKINS_HOME}" ] || [  ! -d "${JENKINS_HOME}" ]; then
		JENKINS_HOME=$(getent passwd "${TARGET_USER}" | cut --delimiter=: --fields=6);
	fi;

	if [ -n "${JENKINS_HOME}" ] && [ -d "${JENKINS_HOME}" ]; then

		git_init "$HOME/.ssh/jenkins-config.pull";

		# ------------------------------------------------------------

		cd "$(dirname ${JENKINS_HOME})" && \
		find "$(basename ${JENKINS_HOME})/" \
			-mindepth 1 \
			-maxdepth 3 \
			-name 'config.xml' \
			-not -path "./config-history/*" \
			-type f \
			-exec 7z u "${FILEPATH_ARCHIVE_7Z}" -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on -spf -spe '{}' \; \
		;
		# 	-exec 7z u "${FILEPATH_ARCHIVE_7Z}" -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on -spf '{}' > /dev/null \; \
		# ;

		# ------------------------------------------------------------

		# git init;
		# shopt -s globstar; # If set, the pattern ‘**’ used in a filename expansion context will match all files and zero or more directories and subdirectories. If the pattern is followed by a ‘/’, only directories and subdirectories match.
		# git add **/config.xml;
		# git commit --message="${START_TIMESTAMP} | Backing-up Jenkins config-scripts" --all;

	fi;

fi;

# ------------------------------------------------------------
# 
# Citation(s)
#	
# 	devops.stackexchange.com  |  "How do you back up Jenkins jobs & master configs?"  |  https://devops.stackexchange.com/a/563
# 
# ------------------------------------------------------------
