#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/update_bins_from_sftp" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else
	# ------------------------------------------------------------
	
	# Make sure required runtime(s) are installed
	if [ -z "$(which dos2unix)" ]; then
		apt-get-update -y; apt-get install -y dos2unix;
	fi;
	
	SOURCE_DIR="";

	# Detect & handle WSL instance(s)
	WSL_CHECK_EXISTS=$(which wsl_get_windows_username);
	if [ -n "${WSL_CHECK_EXISTS}" ]; then
		WIN32_USERNAME=$(wsl_get_windows_username);
	fi;
	if [ -n "${WIN32_USERNAME}" ]; then
		#  Windows OS running WSL (Windows Subsystem for Linux) - Locate source directory from amongst Win32-Host-User's files
		WIN32_HOMEDIR=$(find /mnt/*/Users/${WIN32_USERNAME} -mindepth 0 -maxdepth 0 -type d);
		WIN32_USR_LOCAL=$(find ${WIN32_HOMEDIR}/Documents -maxdepth 10 -name 'local' -type d | grep '/cloud-infrastructure/usr/local');
		if [ ! -n "${WIN32_USR_LOCAL}" ]; then
			echo "";
			echo "Unable to locate directory matching 'cloud-infrastructure/usr/local' within win32-user's documents @ '${WIN32_USERNAME}'";
			exit 1;
		else
			SOURCE_DIR="$(dirname ${WIN32_USR_LOCAL})";
		fi;

	else

		WHOAMI_HOME_DIR="$(getent passwd $(WHOAMI) | cut --delimiter=: --fields=6)";
		WHOAMI_USR_LOCAL=$(find ${WHOAMI_HOME_DIR} -maxdepth 10 -name 'local' -type d | grep '/cloud-infrastructure/usr/local');
		SOURCE_DIR="$(dirname ${WHOAMI_USR_LOCAL})";
		SOURCE_DIR_ERRS=$?;

		if [ "${SOURCE_DIR_ERRS}" != "0" ] && [ -n "${SUDO_USER}" ]; then
			#  Linux OS - Locate source directory from amongst Non-Sudo User's files
			SUDOER_HOME_DIR="$(getent passwd ${SUDO_USER} | cut --delimiter=: --fields=6)";
			SUDOER_USR_LOCAL=$(find ${SUDOER_HOME_DIR} -maxdepth 10 -name 'local' -type d | grep '/cloud-infrastructure/usr/local');
			SOURCE_DIR="$(dirname ${SUDOER_USR_LOCAL})";
			SOURCE_DIR_ERRS=$?;
		fi;

	fi;

	if [ ! -d "${SOURCE_DIR}/local/bin/" ] || [ ! -d "${SOURCE_DIR}/local/sbin/" ]; then

		# Error-out if any required source directories are missing

		if [ ! -d "${SOURCE_DIR}/local/bin/" ]; then
			echo "";
			echo "Error - Directory not-found: [ ${SOURCE_DIR}/local/bin/ ]";
		fi;
		if [ ! -d "${SOURCE_DIR}/local/sbin/" ]; then
			echo "";
			echo "Error - Directory not-found: [ ${SOURCE_DIR}/local/sbin/ ]";
		fi;
		exit 1;

	else

		# Required source directories exist - Update local runtimes from them

		echo "";
		echo "Copying files from '${SOURCE_DIR}/local/bin/*' to '/usr/local/bin/.' ...";
		sudo cp --verbose --force ${SOURCE_DIR}/local/bin/* /usr/local/bin/.;
		sudo chown "root:root" /usr/local/bin/*;
		sudo chmod 0755 /usr/local/bin/*;
		sudo dos2unix /usr/local/bin/*;

		echo "";
		echo "Copying files from '${SOURCE_DIR}/local/sbin/*' to '/usr/local/sbin/.' ...";
		sudo cp --verbose --force ${SOURCE_DIR}/local/sbin/* /usr/local/sbin/.;
		sudo chown "root:root" /usr/local/sbin/*;
		sudo chmod 0755 /usr/local/sbin/*;
		sudo dos2unix /usr/local/sbin/*;

		echo "";
		echo "Finished updating from source '${SOURCE_DIR}/local/*bin'";
		echo "";
		exit 0;

	fi;

fi;
